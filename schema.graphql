type AttesterDisabled @entity(immutable: true) {
  id: Bytes!
  attester: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AttesterEnabled @entity(immutable: true) {
  id: Bytes!
  attester: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AttesterManagerUpdated @entity(immutable: true) {
  id: Bytes!
  previousAttesterManager: Bytes! # address
  newAttesterManager: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MaxMessageBodySizeUpdated @entity(immutable: true) {
  id: Bytes!
  newMaxMessageBodySize: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MessageReceived @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  sourceDomain: BigInt! # uint32
  nonce: BigInt! # uint64
  sender: Bytes! # bytes32
  messageBody: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MessageSent @entity(immutable: true) {
  id: Bytes!
  message: Bytes! # bytes
  messageLength: BigInt! # uint256
  nonce: String! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Pause @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PauserChanged @entity(immutable: true) {
  id: Bytes!
  newAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RescuerChanged @entity(immutable: true) {
  id: Bytes!
  newRescuer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignatureThresholdUpdated @entity(immutable: true) {
  id: Bytes!
  oldSignatureThreshold: BigInt! # uint256
  newSignatureThreshold: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpause @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
